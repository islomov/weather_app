apply from: file("$rootDir/versions.gradle")

ext {

    bumptech = [
            glide                   : "com.github.bumptech.glide:glide:$versions.glide",
            glideAnnotationProcessor: "com.github.bumptech.glide:compiler:$versions.glide"
    ]

    google = [
            appCompat                       : "androidx.appcompat:appcompat:$versions.androidX",
            constraintLayout                : "androidx.constraintlayout:constraintlayout:$versions.constraintLayout",
            coreKtx                         : "androidx.core:core-ktx:$versions.androidX",
            coreTesting                     : "androidx.arch.core:core-testing:$versions.coreTesting",
            dagger                          : "com.google.dagger:dagger:$versions.dagger",
            daggerCompiler                  : "com.google.dagger:dagger-compiler:$versions.dagger",
            daggerAndroid                   : "com.google.dagger:dagger-android:$versions.dagger",
            daggerAndroidSupport            : "com.google.dagger:dagger-android-support:$versions.dagger",
            daggerAndroidAnnotationProcessor: "com.google.dagger:dagger-android-processor:$versions.dagger",
            espressoContrib                 : "androidx.test.espresso:espresso-contrib:$versions.espresso",
            espressoIntents                 : "androidx.test.espresso:espresso-intents:$versions.espresso",
            espressoIdlingResource          : "androidx.test.espresso:espresso-idling-resource:$versions.espresso",
            fragment                        : "androidx.fragment:fragment:$versions.fragment",
            fragmentTesting                 : "androidx.fragment:fragment-testing:$versions.fragment",
            legacySupport                   : "androidx.legacy:legacy-support-v4:$versions.legacySupport",
            lifecycleExtensions             : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
            lifecycleReactiveStreams        : "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle",
            locationPlayServices            : "com.google.android.gms:play-services-location:$versions.googlePlayServices",
            multidex                        : "androidx.multidex:multidex:$versions.multidex",
            swiptRefreshLayout              : "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipeRefreshLayout",
            testCore                        : "androidx.test:core:$versions.testCore",
            testJunit                       : "androidx.test.ext:junit:$versions.androidXJunit",
            testOrchestrator                : "androidx.test:orchestrator:$versions.testOrchestrator",
            testRules                       : "androidx.test:rules:$versions.testRules",
            testRunner                      : "androidx.test:runner:$versions.testRunner",
            testEspresso                    : "androidx.test.espresso:espresso-core:$versions.androidXEspresso",
            roomRuntime                     : "androidx.room:room-runtime:$versions.room",
            roomCompiler                    : "androidx.room:room-compiler:$versions.room",
            rooomRxJava2                    : "androidx.room:room-rxjava2:$versions.room",
            activityKtx                     : "androidx.activity:activity-ktx:$versions.activity"
    ]


    reactive = [
            android: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
            java   : "io.reactivex.rxjava2:rxjava:$versions.rxJava",
            kotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
    ]

    square = [
            okhttp                : "com.squareup.okhttp3:logging-interceptor:$versions.okhttp",
            retrofit              : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            retrofitRxAdapter     : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            gsonConverter         : "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    ]

    junit = [
            base: "junit:junit:$versions.junit"
    ]

    kotlin = [
            jdk7: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    ]

    wasabeef = [
            glideTransformations: "jp.wasabeef:glide-transformations:$versions.glideTransformations"
    ]
}